
Simulation execution in Eclipse with Automator 

1) RUN CONFIGURATIONS 

	1.1) MAIN
	Project: deus
	Main Class: it.unipr.ce.dsg.deus.automator.gui.DeusAutomatorFrame
	1.2) ARGUMENTS
	Program Arguments: 
	- first parameter passed is the path of the XML configuration file (e.g. Revol1AdaptFixedPop.xml)
	- second parameter is the name of the XML file that will be generated by the Automator (e.g. revol.xml)  
	VM Arguments: 
	-Djava.util.logging.config.file=logging.properties -Xms256M -Xmx1000M
	(-Xmx depends on the max RAM available on your PC!)

2) THE AUTOMATOR

Run the Eclipse configuration previously defined, with Revol1AdaptFixedPop.xml as first program argument.
When the automator GUI starts, select "Open" and select from the file system 
one of the .xml files that are stored in examples/revola/automator/ (e.g. Test1a.xml).
This will load a simulation configuration. 
You can create a new one from the scratch and save it (suggestion: save such configurations
in a file with .xml extension). 

Description of configuration Test1a:
1) the parameter "avgInitChromosome" of Node "revolNode" is set to change from value 1 to 5 with step = 2
2) 5 seeds are set
3) two types of gnuplot files will be created: 
one with the mean QHR (query hit ratio) of all the nodes, 
another with the variance of QHR of all nodes - with respect to the virtual time "VT".

Press the "Run" button. A small GUI will open, summarizing the configured simulations.
Press the "Start" button in the small GUI.

Thus, 3 x 5 = 15 simulations will be executed (sequentially - look at the progress bar in the automator GUI). 
For each value "avgInitChromosome", there will be 5 resulting logs that will be averaged.
When all simulations will be finished, in deus/results/gnuplot/ there will be 6 files 
(3 for the mean values of QHR, 3 for the variances, considering the 3 possible values of "avgInitChromosome"). 


Important: look at LogRevolPeerStatsEvent.java, run() method, to see how to log results.

In general:

AutomatorLogger a = new AutomatorLogger("logger");
ArrayList<LoggerObject> fileValue = new ArrayList<LoggerObject>();

then, if you want to log the value of a variable called "var", write:

fileValue.add(new LoggerObject("var", value));
a.write(Engine.getDefault().getVirtualTime(), fileValue);

	